<?xml version="1.0"?>
<launch>

    <!-- We resume the logic in gazebo_ros package empty_world.launch, -->
    <!-- changing only the name of the world to be launched -->
    <arg name="model" default="$(find rover_RYCSV)/urdf/rover_RYCSV.urdf.xacro"/>
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.01"/>
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="3.141592"/>

    <arg name="robot_name" value="rover"/>

    <!-- Parse of Model -->
    <param 
        name="robot_description" 
        command="$(find xacro)/xacro '$(find rover_RYCSV)/urdf/rover_RYCSV.urdf.xacro'"
    />
    
    <!-- Robot_state_publisher -->
    <!-- Publica las transformaciones entre marcos de referencia fijos -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_pub" />

    <!-- RViz-->
    <!-- <node pkg="rviz" type="rviz" name="rviz" />-->

    <!-- ///////////////////////////////////////////////////////////////      -->
    <!-- Controller Manager -->
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find rover_RYCSV)/config/joint_names_Rover_RYCSV.yaml" command="load" />

    <rosparam file="$(find rover_RYCSV)/config/parameters.yaml" command="load" />

    <!-- load the controllers -->
    <node 
        name="spawner_ctrols" 
        pkg="controller_manager" 
        type="spawner" 
        respawn="false"
        output="screen"
        args="  joint_state_controller
                left_motor_1
                left_motor_2
                left_motor_3
                right_motor_1
                right_motor_2
                right_motor_3
                dir_left_llanta_1
                dir_left_llanta_3
                dir_right_llanta_1
                dir_right_llanta_3
                rocker_izq
                rocker_der
                bogie_izq
                bogie_der"
    />

    <!-- ///////////////////////////////////////////////////////////////      -->
    <!-- Init Gazebo  -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
    </include> 

    <!-- Spawn of robot inside Gazebo -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_$(arg robot_name)"
        args="-x $(arg x) -y $(arg y) -z $(arg z)
            -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)
            -urdf -param robot_description 
            -model $(arg robot_name)"
            respawn="false">
    </node>

    <node 
        pkg="rover_RYCSV" 
        type="control_caja_node.py" 
        name="Control_caja" 
        output="screen">     
    </node>

    <node 
        pkg="rover_RYCSV" 
        type="control_motores_node.py" 
        name="Control_motores" 
        output="screen">     
    </node>

    <node 
        pkg="rover_RYCSV" 
        type="control_dir_ruedas_node.py" 
        name="Control_dir_ruedas" 
        output="screen">     
    </node>

    <node 
        pkg="rover_RYCSV"
        type="controlador_node.py" 
        name="Controlador" 
        output="screen">              
    </node>

    <node 
        pkg="rover_RYCSV" 
        type="TF_node.py" 
        name="TF" 
        output="screen">        
    </node>
</launch>